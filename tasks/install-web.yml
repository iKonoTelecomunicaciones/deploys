- name: "Create directory for iKonoSuite"
  file:
    path: "~/.web"
    state: directory

- name: "Download provisiones API"
  subversion:
    repo: http://dev.ikono.com.co/svn/provisioner_api/trunk
    dest: /home/ikono/web/provisioner_api
    username: "{{ svn_username }}"
    password: "{{ svn_password }}"
    checkout: yes
    update: yes
    switch: no
    force: no

- name: "Config subversion"
  lineinfile:
    path: "~/.subversion/servers"
    regexp: '^# store-passwords'
    line: "store-passwords = no"

- name: "Clone backend proyect" 
  git: 
    repo: "https://{{ git_username | urlencode }}:{{ git_password | urlencode }}@gitlab.com/iKono/ikono_suite_backend.git"
    dest: /home/ikono/web/ikono_suite_backend
    clone: yes
    update: no

- name: "Clone frontend proyect" 
  git: 
    repo: "https://{{ git_username | urlencode }}:{{ git_password | urlencode }}@gitlab.com/iKono/build_ikono_suite_frontend.git"
    dest: /home/ikono/web/build_ikono_suite_frontend
    clone: yes
    update: no

- name: "Config git for backend"
  shell:
    cmd: |
      if [[ $( grep {{ git_password }} ~/web/ikono_suite_backend/.git/config ) ]]; then 
        sed -i "s/:{{ git_password }}//g" ~/web/ikono_suite_backend/.git/config
      else
        echo "OK"
      fi
  register: config_git_backend
  changed_when: config_git_backend.stdout != "OK"

- name: "Config git for frontend"
  shell:
    cmd: |
      if [[ $( grep {{ git_password }} ~/web/build_ikono_suite_frontend/.git/config ) ]]; then 
        sed -i "s/:{{ git_password }}//g" ~/web/build_ikono_suite_frontend/.git/config
      else
        echo "OK"
      fi
  register: config_git_frontend
  changed_when: config_git_frontend.stdout != "OK"

- name: "Dirs for backend"
  file:
    path: "{{ item }}"
    state: directory
  loop: 
    - ~/web/ikono_suite_backend/media/sounds
    - ~/web/ikono_suite_backend/media/moh
    - ~/web/ikono_suite_backend/media/recordings
    - ~/web/ikono_suite_backend/logs

- name: "Database logs file for backend"
  file:
    path: ~/web/ikono_suite_backend/logs/database.log
    state: touch

- name: "Upgrade pip package manager for ikono_suite virtualenv"
  shell:
    cmd: | 
      source ~/.envs/ikono_suite/bin/activate
      PIPVER=$(pip list --outdated | grep pip | awk '{print $2}')
      if [[ $(pip list --outdated | grep pip | awk '{print $3}') > $PIPVER ]]; then
        python -m pip install --upgrade pip
      else
        echo "OK"
      fi
  register: upgrade_pip
  changed_when: upgrade_pip.stdout != "OK"

- name: "Pip install requeriments.txt for ikono_suite virtualenv"
  pip:
    requirements: ~/web/ikono_suite_backend/requirements.txt
    virtualenv: ~/.envs/ikono_suite/
    state: present

- name: "Create config files for django"
  shell:
    cmd: |
      cd ~/web/ikono_suite_backend
      if [[ ! -e ikono_suite/local_settings.py && ! -e ikono_suite/monitoring_settings.py ]]; then
        rsync -avph ikono_suite/local_settings.py.template ikono_suite/local_settings.py
        rsync -avph ikono_suite/monitoring_settings.py.template ikono_suite/monitoring_settings.py
      elif [[ ! -e ikono_suite/local_settings.py ]]; then
        rsync -avph ikono_suite/local_settings.py.template ikono_suite/local_settings.py
      elif [[ ! -e ikono_suite/monitoring_settings.py ]]; then
        rsync -avph ikono_suite/monitoring_settings.py.template ikono_suite/monitoring_settings.py
      else
        echo "OK"
      fi
  register: config_files_django
  changed_when: config_files_django.stdout != "OK"
