# - name: "Create /ikono redirect"
#   file:
#     path: /var/www/html/ikono
#     state: directory

# - name: "Copy index.php file for redirect to nginx"
#   copy:
#     src: files/nginx_ikono_index.php
#     dest: /var/www/html/ikono/index.php
#     force: no

- name: "Config product port for nginx"
  shell:
    cmd: | 
      cd /home/ikono/web/
      PRODUCT='{{ product_ikono }}'
      if [[ $(grep "['\"]pbx-call[\"']" ikono_suite_backend/ikono_suite/local_settings.py build_ikono_suite_frontend/assets/config/config.deploy.json) ]]; then
        sed -i "s/\(['\"]\)pbx-call\([\"']\)/\1${PRODUCT}\2/g" ikono_suite_backend/ikono_suite/local_settings.py build_ikono_suite_frontend/assets/config/config.deploy.json
      else
        echo "OK"
      fi
  register: config_default_nginx
  changed_when: config_default_nginx.stdout != "OK"
  vars: 
    product_ikono: "pbx-call"
  notify: supervisorctl_ikono_suite_restart

# - name: "Config default port for nginx"
#   shell:
#     cmd: | 
#       if [[ $(grep "9000" /etc/nginx/conf.d/frontend.conf) && $(grep "Listen 80" /etc/httpd/conf/httpd.conf) ]]; then

#         # default port for nginx
#         sed -i "s/9000/80/g" /etc/nginx/conf.d/frontend.conf
        
#         # 9000 port for apache
#         sed -i "s/Listen 80/Listen 9000/g" /etc/httpd/conf/httpd.conf

#         service httpd stop
#         service nginx restart
#         service httpd start
        
#       elif [[ ! $(grep "80" /etc/nginx/conf.d/frontend.conf) || ! $(grep "Listen 9000" /etc/httpd/conf/httpd.conf) ]]; then  
#         echo "Validar puertos"
#       else
#         echo "OK"
#       fi
#   register: config_default_nginx
#   failed_when: config_default_nginx.stdout == "Validar puertos"
#   changed_when: config_default_nginx.stdout != "OK"
#   ignore_errors: true
