- name: Add Irontec repository
  yum_repository:
    name: irontec
    file: irontec
    description: Irontec RPMs repository
    baseurl: http://packages.irontec.com/centos/$releasever/$basearch/
    enabled: yes
    gpgcheck: no
    state: present

- name: "Install packages from YUM repositories"
  yum:
    name: "{{ packages }}"
  vars:
    packages:
      - yum-utils
      - "@Development tools"
      - pcre
      - zlib
      - libffi-devel
      - libffi 
      - nscd
      - MySQL-python
      - nginx
      - sshpass
      - jq
      - python-setuptools 
      - git
      - colordiff
    state: present

- name: "Install php-mysql package from YUM repositories"
  shell: 
    cmd: |
      if [ ! $(rpm -qa | grep php-mysqlnd) ]; then
        yum -y remove php-mysql
        yum -y install php-mysqlnd
      else
        echo "OK"
      fi
  register: install_php_mysql
  changed_when: install_php_mysql.stdout != "OK"
  when: ansible_distribution_major_version > "6"

- name: "Checking OpenSSL version"
  shell: openssl version
  register: openssl_version

- name: "Download and unarchive OpenSSL sources"
  unarchive:
    src: http://www.openssl.org/source/openssl-1.1.1d.tar.gz
    dest: /usr/local/src/utilities/
    remote_src: yes
  when: openssl_version.stdout is not match("OpenSSL 1.1.1d.*")

- name: "Install OpenSSL from sources"
  shell: 
    cmd: |
      ./Configure linux-x86_64 --prefix=/usr 
      make && make install
    chdir: /usr/local/src/utilities/openssl-1.1.1d/
  register: install_openssl
  when: openssl_version.stdout is not match("OpenSSL 1.1.1d.*")

# - name: "Debuging OpenSSL version"
#   debug: 
#     msg: The OpenSSL version is ({{ openssl_version.stdout }}).
#     verbosity: 1
#   when: install_openssl is skipped

#- name: "Checking python version"
#  shell: if [[ -e /usr/local/bin/python3 ]];then python3 --version; fi
#  register: python_version
#
#- name: "Download and unarchive python sources"
#  unarchive:
#    src: https://www.python.org/ftp/python/3.8.3/Python-3.8.3.tar.xz
#    dest: /usr/local/src/python/
#    remote_src: yes
#  when: python_version.stdout is not match("Python 3.8.*")
#
#- name: "Install python from sources"
#  shell:
#    cmd: |
#      cd /usr/local/src/python/Python-3.8.3/
#      if [[ ! $(lsb_release -sr) < 7 ]]; then
#        make clean && make distclean
#        yum install -y centos-release-scl
#        yum install -y devtoolset-9-gcc devtoolset-9-gcc-c++ devtoolset-9-gcc-gdb-plugin devtoolset-9-gcc-gfortran devtoolset-9-gcc-plugin-devel
#        source scl_source enable devtoolset-9
#      fi
#      ./configure --enable-optimizations --with-ensurepip=install
#      make -j 2
#      make altinstall
#      cd /usr/local/bin/
#      ln -s python3.8 python3
#      if [[ ! $(lsb_release -sr) < 7 ]]; then
#        sed -i.$(date +"%s") "s/enabled=1/enabled=0/g" /etc/yum.repos.d/CentOS-SCLo-scl.repo /etc/yum.repos.d/CentOS-SCLo-scl-rh.repo
#      fi
#      python3.8 -c "print ('hello world')"
#    chdir: /usr/local/src/python/Python-3.8.3/
#  register: install_python
#  #failed_when: install_python.stdout != "hello world"
#  when: python_version.stdout is not match("Python 3.8.*")

# - name: "Debuging Python version"
#   debug: 
#     msg: The Python3 version is ({{ python_version.stdout }}).
#     verbosity: 1
#   when: install_python is skipped

- name: "Upgrade pip3.8 package manager"
  shell:
    cmd: | 
      PIP38=$(pip3.8 list --outdated | grep pip | awk '{print $2}')
      if [[ $(pip3.8 list --outdated | grep pip | awk '{print $3}') > $PIP38 ]]; then
        python3.8 -m pip install --upgrade pip
      else
        echo "OK"
      fi
  register: upgrade_pip38
  changed_when: upgrade_pip38.stdout != "OK"
      
- name: "Install pip3.8 packages"
  pip:
    name: "{{ pip_packages }}"
    executable: pip3.8
    state: present
  vars: 
    pip_packages:
      - wheel
      - setuptools

- name: "Install virtualenvwrapper"
  shell: 
    cmd: |
      if [[ ! $(updatedb --prunepaths /var/spool/asterisk/monitor-mp3/ && locate virtualenvwrapper) ]]; then
        pip3.8 install virtualenvwrapper
      else
        echo "OK"
      fi
  register: install_virtualenvwrapper
  changed_when: install_virtualenvwrapper.stdout != "OK"

- name: "Install supervisor"
  shell: 
    cmd: |
      if [[ ! $(updatedb --prunepaths /var/spool/asterisk/monitor-mp3/ && locate supervisord) ]]; then
        if [[ $(lsb_release -sr) < 7 ]]; then
          pip3.8 install supervisor
          cd /usr/local/bin/
          echo_supervisord_conf > /etc/supervisord.conf
          mkdir /var/run/supervisor/ /var/log/supervisor /etc/supervisord.d
          sed -i.$(date +"%s") "
          s#^file=.*#file=/var/run/supervisor/supervisor.sock#g
          s#^logfile=.*#logfile=/var/log/supervisor/supervisord.log#g
          s#^pidfile=.*#pidfile=/var/run/supervisord.pid#g
          s#^serverurl=.*#serverurl=unix:///var/run/supervisor/supervisor.sock#g
          s#^;\[include#\[include#g
          s#^;files =.*#files = supervisord.d/*.ini#g
          " /etc/supervisord.conf
        else
          yum -y install supervisor
        fi
      else
        echo "OK"
      fi
  register: install_supervisor
  changed_when: install_supervisor.stdout != "OK"

- name: "Install ffmpeg"
  shell: 
    cmd: |
      if [[ ! $(rpm -qa | grep ffmpeg) ]]; then
        rpm --import http://li.nux.ro/download/nux/RPM-GPG-KEY-nux.ro
        if [[ $(lsb_release -sr) < 7 ]]; then
          rpm -Uvh http://li.nux.ro/download/nux/dextop/el6/x86_64/nux-dextop-release-0-2.el6.nux.noarch.rpm
        else
          rpm -Uvh http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-5.el7.nux.noarch.rpm     
        fi
        yum -y install ffmpeg ffmpeg-devel
        sed -i.$(date +"%s") "s/enabled=1/enabled=0/g" /etc/yum.repos.d/nux-dextop.repo
        ffmpeg -version
      else
        echo "OK"
      fi
  register: install_ffmpeg
  changed_when: install_ffmpeg.stdout != "OK"
