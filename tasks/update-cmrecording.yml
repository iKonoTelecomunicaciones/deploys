### CM-Recording

- name: "Backup cmrecording config"
  synchronize:
    src: /etc/cmrecording/
    dest: /tmp/cmrecording_{{ ansible_date_time.epoch }}
  delegate_to: "{{ inventory_hostname }}"
  register: cmrecording_backup

- name: "Update cmrecording sources"
  subversion:
    repo: http://dev.ikono.com.co/svn/scripts/recoding-info/trunk
    dest: /usr/local/src/scripts/recording-info-trunk
    username: "{{ svn_username }}"
    password: "{{ svn_password }}"
    checkout: no
    update: yes
    switch: no
    force: no
  register: cmrecording_update

- name: "Install cmrecording from sources"
  shell: 
    cmd: |
      python setup.py install
      HOST=$(grep -E "host =.*" /tmp/cmrecording_[0-9][0-9][0-9][0-9][0-9][0-9][0-9]*/cmrecording.conf | awk '{print $3}' | head -n1)
      sed -i.$(date +"%s") "s/\(host =\).*/\1 $HOST/g" /etc/cmrecording/cmrecording.conf
      service cmrecording restart
    chdir: /usr/local/src/scripts/recording-info-trunk/recording-info/
  register: cmrecording_install
  when: cmrecording_update is changed

- name: "Checking cmrecording running"
  service:
    name: cmrecording
    state: started

- name: "Waiting new recording log"
  shell:
    cmd: |
      ENDLINE=$(tail -n1 recording)
      TIMEOUT={{ timeout }}
      while [[ $(tail -n1 recording) == $ENDLINE && $TIMEOUT != 0 ]]; do
        sleep 1
        TIMEOUT=$(( TIMEOUT - 1 ))
      done
      NEWLINE=$(tail -n1 recording)
      if [[ $TIMEOUT != 0 ]]; then
        echo "ï¿¼Ready!" 
        echo $ENDLINE | cut -d'|' -f11
        echo $NEWLINE | cut -d'|' -f11
      else
        >&2 echo "FAILED: Timeout and is the same line."
      fi
    chdir: /var/log/asterisk/
  register: recording_log
  vars: 
    timeout: 600 # 600 seconds, 10 min
  failed_when: recording_log.stderr != ""
  when: cmrecording_install is changed

- name: "Debug new recording"
  debug:
    msg: "{{ recording_log.stdout_lines }}"
  when: cmrecording_install is changed
